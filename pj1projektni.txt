Klasa Korisnik koja ima atribute korisnicko ime i lozinka
Mozda treba i niz kurseva za svakog korisnika, da bude protected pa da ga Student i Predavac koriste, vjerovatno dobra implementacija
I ovdje bi niz kurseva potencijalno bilo dobro da koristi neku STL funkcionalnost
Podklase Student i Predavac uz dodatne funkcionalnosti
PRILIKOM OCITAVANJA NEKOG STUDENTA ILI PREDAVACA IZ FAJLA AZURIRA SE NIZ KURSEVA, kasnije implementacija

Klasa Kurs sadrzi upisane studente (niz studenata), cuva ih u fajlu, u nekom folderu za taj specifican kurs
Niz studenata ne mora biti moj niz, nego koristiti nesto iz STL biblioteke, vektor ili listu radi lakse manipulacije i manje koda!
Pri svakom ocitavanju u main funkciji, niz studenata za kurs se nadopunjuje, tako da imamo isto stanje TO SE REALIZUJE KASNIJE
Klasa Kurs ima i svog Predavaca, te se i on ocitava iz neke datoteke
Mozda bi najbolje bilo realizovati tako da Predavac bude vec upisan u neki fajl, ali to je teze realizovati, bolje ga upisati u programu
Svaki Kurs ima svoj fajl za upisane studente, te ima fajl za zahtjeve za upis
 
U konstruktorima bi bilo dobro realizovati da se provjeri da li vec postoji folder za Studenta/Kurs, ukoliko ne postoji kreira se, ukoliko postoji ucitavaju se potrebni podaci vec sacuvani

Metoda u klasi Korisnik podnesiZahtjev za upis na kurs kao predavac ili student
Metoda pregledajZahtjeve u klasi Kurs omogucava predavacu (samo jedan predavac) da otvori fajl za zahtjeve upisa i da odobri ili ne
Ako odobri, azurira se taj fajl i student je upisan na kurs

Studenti imaju metodu da se sprijatelje sa drugim studentom
Student salje zahtjev, te se taj zahtjev cuva u fajlu drugog studenta kome je zahtjev poslat
Student ima metodu da otvori zahtjeve, i da prihvati ili odbije prijateljstvo
Ako prihvati zahtjev, u fajl prijatelji se smjesta student koji je poslao zahtjev, kao i ovaj drugi koji je prihvatio zahtjev u fajl za prvog
Otkljucava se metoda za slanje poruka, koja je prevashodno onemogucena pomocu nekog boola, gdje korisnik salje poruku koja se smjeta u fajl, koji drugi korisnik moze otvoriti i vidjeti, te odgovoriti
Najbolje bi bilo da svaki student ima svoj cet koji ce biti isti, ali laksa manipulacija podacima
Za otkljucavanje metode je potrebna neka bool varijabla

Student moze pisati predavacu ukoliko je upisan na kurs.
Potrebno je da predavac ima inboks, te da odgovori na poruku Studentu, te da svaki student ima fajl za dopisivanje sa tim odredjenim predavacem

-------------------------------------------------------

Potrebna je klasa Administrator
Administrator ima pristup folderima kurseva i korisnika, te ih moze obrisati po potrebi
Administrator moze i dodati foldere za kurs ili dodati studenta u folder Studenti ili izmijeniti sadrzaj postojecih foldera i fajlova
Kada se aplikacija zatvori, perzistencija podataka -> INTERNET
Serijalizovani podaci -> ISerializable (samo ideja, nisam siguran da treba, auditorne vjezbe)
Serijalizovani podaci -> Datoteke!

-------------------------------------------------------

Za pronalazenje unije, presjeka ili razlike izmedju skupova studenata na kursu, potrebno je ocitati sve upisane studente iz neke datoteke za ta 2 kursa,
smjestiti ih u neki niz studenata i porediti elemente, te naci ono sto je trazeno.
Studenti koji su polozili ispit, potrebna nova funkcionalnost koja ce ih upisati u neki fajl, tako da se oni kasnije mogu ocitati i da se mogu naci unija, presjek ili razlika.
Filtriranje poruka u fajlu se moze izvrsiti substringovima, gdje se ocitaju poruke i vrsi se poredjenje, ukoliko postoji substring, ocita se poruka i prikaze se, u suprotnom ne.

-------------------------------------------------------

Potrebna je nova funkcionalnost, lambda izraz ili jos bolje niz pokazivaca na funkcije.
Ukoliko ove funkcije koje vracaju bool ispunjavaju sve uslove, student se smije upisati na kurs, te se sve to cuva u toj odredjenoj datoteci/fajlu.
Potrebno je implementirati 4 funkcije koje su naglasene.

------------------------------------------------------

Potrebno je realizovati klasu Graf ili naci vec gotovo implementaciju ukoliko postoji u c++ stlu (sumnjam da ima)
Koristi se matricna reprezentacija, te se pomocu BFS obilaska od datog cvora(studenta) do datog cvora(studenta) dobija najkraca putanja (radjeno na SPA)
Da bi se ispunio ovaj uslov da prva osoba pohadja kurs A, a druga B, mora se vrsiti vise obilazaka, i imati neka promjenljiva double koja ce se apdejtovati da bi se racunala srednja vrijednost.	 


